{"paragraphs":[{"text":"%md\n\n# Data Engineer Notebook\n\n## Description\nThis set of scripts read data from raw csv data and saves it to hive managed tables.\n\n## Execution Steps\n\n* Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table\n* Step 2: Read raw employee data and save to Hive managed table\n* Step 3: Read covid data and save to Hive managed table\n* Step 4: Read geocode data and save to Hive managed table\n* Step 5: Create hive materialized view for number of employees per location","user":"pvidal","dateUpdated":"2020-06-17T22:24:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Data Engineer Notebook</h1>\n<h2>Description</h2>\n<p>This set of scripts read data from raw csv data and saves it to hive managed tables.</p>\n<h2>Execution Steps</h2>\n<ul>\n<li>Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table</li>\n<li>Step 2: Read raw employee data and save to Hive managed table</li>\n<li>Step 3: Read covid data and save to Hive managed table</li>\n<li>Step 4: Read geocode data and save to Hive managed table</li>\n<li>Step 5: Create hive materialized view for number of employees per location</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1592432176024_-872050826","id":"20200504-145049_208312522","dateCreated":"2020-06-17T22:16:16+0000","dateStarted":"2020-06-17T22:19:44+0000","dateFinished":"2020-06-17T22:19:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:168"},{"text":"%md\n### Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table","user":"pvidal","dateUpdated":"2020-06-17T22:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table</h3>\n"}]},"apps":[],"jobName":"paragraph_1592432176028_1259075710","id":"20200504-145710_1004098376","dateCreated":"2020-06-17T22:16:16+0000","dateStarted":"2020-06-17T22:19:46+0000","dateFinished":"2020-06-17T22:19:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:169"},{"text":"// Read raw location data\nval locationDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://com-cdp-bucket/raw/locations.csv\")\nlocationDf.printSchema()","user":"pvidal","dateUpdated":"2020-06-17T22:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176028_975705890","id":"20200504-144118_1021814178","dateCreated":"2020-06-17T22:16:16+0000","dateStarted":"2020-06-17T22:19:47+0000","dateFinished":"2020-06-17T22:20:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:170","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"locationDf: org.apache.spark.sql.DataFrame = [LOCATION_ID: int, ADDRESS: string ... 29 more fields]\nroot\n |-- LOCATION_ID: integer (nullable = true)\n |-- ADDRESS: string (nullable = true)\n |-- BKCLASS: string (nullable = true)\n |-- CBSA: string (nullable = true)\n |-- CBSA_DIV: string (nullable = true)\n |-- CBSA_DIV_FLG: integer (nullable = true)\n |-- CBSA_DIV_NO: integer (nullable = true)\n |-- CBSA_METRO: integer (nullable = true)\n |-- CBSA_METRO_FLG: integer (nullable = true)\n |-- CBSA_METRO_NAME: string (nullable = true)\n |-- CBSA_MICRO_FLG: integer (nullable = true)\n |-- CBSA_NO: integer (nullable = true)\n |-- CERT: integer (nullable = true)\n |-- CITY: string (nullable = true)\n |-- COUNTY: string (nullable = true)\n |-- CSA: string (nullable = true)\n |-- CSA_FLG: integer (nullable = true)\n |-- CSA_NO: integer (nullable = true)\n |-- ESTYMD: string (nullable = true)\n |-- FI_UNINUM: integer (nullable = true)\n |-- MAINOFF: integer (nullable = true)\n |-- NAME: string (nullable = true)\n |-- OFFNAME: string (nullable = true)\n |-- OFFNUM: integer (nullable = true)\n |-- RUNDATE: string (nullable = true)\n |-- SERVTYPE: integer (nullable = true)\n |-- STALP: string (nullable = true)\n |-- STCNTY: integer (nullable = true)\n |-- STNAME: string (nullable = true)\n |-- UNINUM: integer (nullable = true)\n |-- ZIP: integer (nullable = true)"}]}},{"text":"// Make sure that all locations have adresses\nlocationDf.createOrReplaceTempView(\"location\")\n\nval allLocations = spark.sql(\"SELECT count(*) FROM location\")\n\nallLocations.show()","user":"pvidal","dateUpdated":"2020-06-17T22:24:21+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176029_-236712720","id":"20200504-144542_365748041","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:171","dateFinished":"2020-06-17T22:20:53+0000","dateStarted":"2020-06-17T22:20:43+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"allLocations: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    2366|\n+--------+"}]}},{"text":"val allLocationsWithAddress = spark.sql(\"SELECT count(*) FROM location where ADDRESS is not null\")\n\nallLocationsWithAddress.show()","user":"pvidal","dateUpdated":"2020-06-17T22:24:22+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176029_-1908932283","id":"20200504-145824_988488816","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:172","dateFinished":"2020-06-17T22:20:55+0000","dateStarted":"2020-06-17T22:20:54+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"allLocationsWithAddress: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    2366|\n+--------+"}]}},{"text":"// Save to hive managed table\n\nimport com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nval hive = HiveWarehouseSession.session(spark).build()\nhive.showDatabases().show()","user":"pvidal","dateUpdated":"2020-06-17T22:24:22+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nhive: com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl = com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl@9247b96\n+------------------+\n|     database_name|\n+------------------+\n|           default|\n|information_schema|\n|               sys|\n+------------------+"}]},"apps":[],"jobName":"paragraph_1592432176029_314553545","id":"20200504-150106_1157423807","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:173","dateFinished":"2020-06-17T22:21:01+0000","dateStarted":"2020-06-17T22:20:57+0000"},{"text":"hive.executeUpdate(\"CREATE DATABASE worldwidebank\");\nhive.setDatabase(\"worldwidebank\");\nlocationDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"locations\").save()","user":"pvidal","dateUpdated":"2020-06-17T22:24:23+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res12: Boolean = true"}]},"apps":[],"jobName":"paragraph_1592432176029_-684216510","id":"20200506-003309_39288531","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:174","dateFinished":"2020-06-17T22:21:12+0000","dateStarted":"2020-06-17T22:21:02+0000"},{"text":"val ds = hive.sql(\"select * from locations limit 10\")\nds.show()","user":"pvidal","dateUpdated":"2020-06-17T22:24:24+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176030_-535239933","id":"20200506-004922_435064089","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:175","dateFinished":"2020-06-17T22:21:16+0000","dateStarted":"2020-06-17T22:21:13+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ds: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [location_id: int, address: string ... 29 more fields]\n+-----------+--------------------+-------+--------------------+--------------------+------------+-----------+----------+--------------+--------------------+--------------+-------+----+-----------+---------+--------------------+-------+------+-------+---------+-------+--------------+--------------------+------+-------+--------+-----+------+--------+------+-----+\n|location_id|             address|bkclass|                cbsa|            cbsa_div|cbsa_div_flg|cbsa_div_no|cbsa_metro|cbsa_metro_flg|     cbsa_metro_name|cbsa_micro_flg|cbsa_no|cert|       city|   county|                 csa|csa_flg|csa_no| estymd|fi_uninum|mainoff|          name|             offname|offnum|rundate|servtype|stalp|stcnty|  stname|uninum|  zip|\n+-----------+--------------------+-------+--------------------+--------------------+------------+-----------+----------+--------------+--------------------+--------------+-------+----+-----------+---------+--------------------+-------+------+-------+---------+-------+--------------+--------------------+------+-------+--------+-----+------+--------+------+-----+\n|          1|8001 West Floriss...|      N|    St. Louis, MO-IL|                null|           0|       null|     41180|             1|    St. Louis, MO-IL|             0|  41180|6384|Saint Louis|St. Louis|St. Louis-St. Cha...|      1|   476|12/3/07|     4287|      0|Worldwide Bank|     JENNINGS BRANCH|  3569|4/24/20|      11|   MO| 29189|Missouri|470566|63136|\n|          2|240 South Pineapp...|      N|North Port-Saraso...|                null|           0|       null|     35840|             1|North Port-Saraso...|             0|  35840|6384|   Sarasota| Sarasota|North Port-Saraso...|      1|   412|1/15/08|     4287|      0|Worldwide Bank|NATIONAL CITY PCG...|  3645|4/24/20|      21|   FL| 12115| Florida|473422|34236|\n|          3|716 East Silver S...|      N|           Ocala, FL|                null|           0|       null|     36100|             1|           Ocala, FL|             0|  36100|6384|      Ocala|   Marion|                null|      0|  null|4/12/08|     4287|      0|Worldwide Bank|SILVER SPRINGS BO...|  4249|4/24/20|      11|   FL| 12083| Florida|474186|34470|\n|          4| 825 Plainfield Road|      N|Chicago-Napervill...|Chicago-Napervill...|           1|      16984|     16980|             1|Chicago-Napervill...|             0|  16980|6384|Willowbrook|   Dupage|Chicago-Napervill...|      1|   176| 1/7/08|     4287|      0|Worldwide Bank|  WILLOWBROOK BRANCH|  3648|4/24/20|      11|   IL| 17043|Illinois|475986|60527|\n|          5|  42 N. Union Street|      N|        Columbus, OH|                null|           0|       null|     18140|             1|        Columbus, OH|             0|  18140|6384|   Delaware| Delaware|Columbus-Marion-Z...|      1|   198| 7/1/07|     4287|      0|Worldwide Bank|DELAWARE-MAIN DU ...|  3669|4/24/20|      23|   OH| 39041|    Ohio|479745|43015|\n|          6|   802 Gallia Street|      N|      Portsmouth, OH|                null|           0|       null|         0|             0|                null|             1|  39020|6384| Portsmouth|   Scioto|Charleston-Huntin...|      1|   170| 7/1/07|     4287|      0|Worldwide Bank|PORTSMOUTH-MAIN D...|  3675|4/24/20|      23|   OH| 39145|    Ohio|479751|45662|\n|          7|3501 Roosevelt Bo...|      N|Birmingham-Hoover...|                null|           0|       null|     13820|             1|Birmingham-Hoover...|             0|  13820|6384| Birmingham|Jefferson|Birmingham-Hoover...|      1|   142|6/23/08|     4287|      0|Worldwide Bank|BIRMINGHAM-TRUSSV...|  4332|4/24/20|      11|   AL|  1073| Alabama|480915|35235|\n|          8|      2145 York Road|      N|Baltimore-Columbi...|                null|           0|       null|     12580|             1|Baltimore-Columbi...|             0|  12580|6384|   Timonium|Baltimore|Washington-Baltim...|      1|   548|2/25/09|     4287|      0|Worldwide Bank|TIMONIUM @ GIANT ...|  2079|4/24/20|      12|   MD| 24005|Maryland|493305|21093|\n|          9| 7200 Cradlerock Way|      N|Baltimore-Columbi...|                null|           0|       null|     12580|             1|Baltimore-Columbi...|             0|  12580|6384|   Columbia|   Howard|Washington-Baltim...|      1|   548|2/25/09|     4287|      0|Worldwide Bank|COLUMBIA @ GIANT ...|  2103|4/24/20|      12|   MD| 24027|Maryland|493329|21045|\n|         10|3530 Sugarloaf Pa...|      N|Washington-Arling...|Frederick-Gaither...|           1|      23224|     47900|             1|Washington-Arling...|             0|  47900|6384|  Frederick|Frederick|Washington-Baltim...|      1|   548| 4/1/09|     4287|      0|Worldwide Bank|URBANA @ GIANT BR...|  2107|4/24/20|      12|   MD| 24021|Maryland|493333|21704|\n+-----------+--------------------+-------+--------------------+--------------------+------------+-----------+----------+--------------+--------------------+--------------+-------+----+-----------+---------+--------------------+-------+------+-------+---------+-------+--------------+--------------------+------+-------+--------+-----+------+--------+------+-----+"}]}},{"text":"%md\n### Step 2: Read raw employee data and save to Hive managed table","user":"pvidal","dateUpdated":"2020-06-17T22:27:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176030_547483978","id":"20200506-005536_624379466","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:176","dateFinished":"2020-06-17T22:21:18+0000","dateStarted":"2020-06-17T22:21:18+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 2: Read raw employee data and save to Hive managed table</h3>\n"}]}},{"text":"val employeeDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://com-cdp-bucket/raw/employee_data.csv\")","user":"pvidal","dateUpdated":"2020-06-17T22:24:25+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176030_2144944278","id":"20200506-113303_1528319006","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:177","dateFinished":"2020-06-17T22:21:22+0000","dateStarted":"2020-06-17T22:21:19+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"employeeDf: org.apache.spark.sql.DataFrame = [Number: int, location: int ... 31 more fields]"}]}},{"text":"import com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nval hive = HiveWarehouseSession.session(spark).build()\n\nhive.setDatabase(\"worldwidebank\");\nemployeeDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"employees\").save()","user":"pvidal","dateUpdated":"2020-06-17T22:24:26+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176030_2056428748","id":"20200506-113544_595223560","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:178","dateFinished":"2020-06-17T22:21:31+0000","dateStarted":"2020-06-17T22:21:23+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nhive: com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl = com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl@1df88781"}]}},{"text":"%md\n### Step 3: Read covid data and save to Hive managed table","user":"pvidal","dateUpdated":"2020-06-17T22:27:44+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176030_1987200675","id":"20200506-113634_1832908608","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:179","dateFinished":"2020-06-17T22:21:32+0000","dateStarted":"2020-06-17T22:21:32+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 3: Read covid data and save to Hive managed table</h3>\n"}]}},{"text":"val covidDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://com-cdp-bucket/raw/covid_cases_04292020.csv\")\n\n","user":"pvidal","dateUpdated":"2020-06-17T22:24:27+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176030_-633684372","id":"20200506-113703_1246022963","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:180","dateFinished":"2020-06-17T22:21:35+0000","dateStarted":"2020-06-17T22:21:33+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"covidDf: org.apache.spark.sql.DataFrame = [FIPS: int, Admin2: string ... 10 more fields]"}]}},{"text":"hive.setDatabase(\"worldwidebank\");\ncovidDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"covid_cases\").save()","user":"pvidal","dateUpdated":"2020-06-17T22:24:28+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176030_991460458","id":"20200506-113829_488202919","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:181","dateFinished":"2020-06-17T22:21:42+0000","dateStarted":"2020-06-17T22:21:37+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n### Step 4: Read geocode data and save to Hive managed table","user":"pvidal","dateUpdated":"2020-06-17T22:27:40+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176030_240734389","id":"20200506-201225_1957883239","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182","dateFinished":"2020-06-17T22:21:43+0000","dateStarted":"2020-06-17T22:21:43+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 4: Read geocode data and save to Hive managed table</h3>\n"}]}},{"text":"// Read raw location data\nval geoDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://com-cdp-bucket/raw/Geocodes_USA_with_Counties.csv\")\ngeoDf.printSchema()","user":"pvidal","dateUpdated":"2020-06-17T22:24:29+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176031_2049600725","id":"20200506-113858_1079907016","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:183","dateFinished":"2020-06-17T22:21:46+0000","dateStarted":"2020-06-17T22:21:44+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"geoDf: org.apache.spark.sql.DataFrame = [zip: int, primary_city: string ... 10 more fields]\nroot\n |-- zip: integer (nullable = true)\n |-- primary_city: string (nullable = true)\n |-- state: string (nullable = true)\n |-- latitude: double (nullable = true)\n |-- longitude: double (nullable = true)\n |-- county: string (nullable = true)\n |-- type: string (nullable = true)\n |-- world_region: string (nullable = true)\n |-- country: string (nullable = true)\n |-- decommissioned: integer (nullable = true)\n |-- estimated_population: integer (nullable = true)\n |-- notes: string (nullable = true)"}]}},{"text":"hive.setDatabase(\"worldwidebank\");\ngeoDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"us_geocodes_by_county\").save()","user":"pvidal","dateUpdated":"2020-06-17T22:27:30+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176031_1151733122","id":"20200506-201005_278241319","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184","dateFinished":"2020-06-17T22:22:06+0000","dateStarted":"2020-06-17T22:22:00+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n### Step 5: Create hive materialized view for number of employees per location","user":"pvidal","dateUpdated":"2020-06-17T22:27:23+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176031_1869124652","id":"20200508-125708_1774050238","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:185","dateFinished":"2020-06-17T22:22:08+0000","dateStarted":"2020-06-17T22:22:08+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 5: Create hive materialized view for number of employees per location</h3>\n"}]}},{"text":"hive.setDatabase(\"worldwidebank\");\n\nhive.executeUpdate(\"CREATE MATERIALIZED VIEW worldwidebank.employees_per_state as select locations.stname, count(*) as num_employees from employees, locations where employees.location=locations.location_id GROUP BY locations.stname\")","user":"pvidal","dateUpdated":"2020-06-17T22:26:55+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res30: Boolean = true"}]},"apps":[],"jobName":"paragraph_1592432176031_-768570709","id":"20200506-201052_606234623","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186","dateFinished":"2020-06-17T22:27:25+0000","dateStarted":"2020-06-17T22:26:56+0000"},{"text":"hive.executeUpdate(\"CREATE MATERIALIZED VIEW worldwidebank.employees_and_cases_per_state as (select locations.stname as state, employees_per_state.num_employees, sum(covid_cases.confirmed) as confirmed_cases from locations, employees_per_state,  covid_cases where employees_per_state.STNAME = locations.STNAME  and covid_cases.province_state = locations.stname  and employees_per_state.STNAME = covid_cases.province_state group by locations.stname, employees_per_state.num_employees)\")","user":"pvidal","dateUpdated":"2020-06-17T22:27:32+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432176031_1846613231","id":"20200508-125814_1651453476","dateCreated":"2020-06-17T22:16:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187","dateFinished":"2020-06-17T22:27:53+0000","dateStarted":"2020-06-17T22:27:34+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res31: Boolean = true"}]}},{"user":"pvidal","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592432852918_1811893760","id":"20200617-222732_942423952","dateCreated":"2020-06-17T22:27:32+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2033"}],"name":"Generate Dataset","id":"2FDSVSWRJ","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"livy:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}